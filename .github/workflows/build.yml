name: Test and Build

on:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

permissions:
  packages: write
  contents: read

env:
  GO_VERSION: "1.24"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Chechout
        uses: actions/checkout@v4
        with:
          path: ./src/github.com/${{ github.repository }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: "**/go.sum"

      - name: Install dependencies
        run: |
          cd ./src/github.com/${{ github.repository }}
          go mod download

      - name: Run tests
        run: |
          cd ./src/github.com/${{ github.repository }}
          go test -timeout 5m ./...

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Chechout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            zmazay/mikromanager
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: "ghcr.io"
          username: "dummy-bot"
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/386,linux/ppc64le
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
