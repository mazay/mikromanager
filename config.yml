# encryptionKey is used for envcrypting sensitive data in the DB
# make sure you change it and keep persistent otherwise the app won't be able to decrypt the data
encryptionKey: eek3eagheCo1phah4shi2Nai3ce8tiehaeVe5baph6Aixi9oorai5iepa1woh4ieQuaiz4outhakeixohn6aech8riep7beeluum

# logLevel valid options are as follows, from most to least verbose:
# trace
# debug
# info
# warn
# error
# fatal
# panic
logLevel: debug

# MikroTik API pollers, defaults to `1` if ommited
# it is recommended to have at lest 2 pollers in order to mitigate possible network issues,
# i.e. if a devices times out this will slow down polling for other resources as they will be waiting in the queue
apiPollers: 2

# devicePollerInterval defines how often devices should be polled,
# the time is between finish of a previous run and start of the new one
# defaults to 300 seconds if ommited
# valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
# devicePollerInterval: 30s

# deviceExportInterval defines how often devices config should be exported/backed up,
# the time is between finish of a previous run and start of the new one
# defaults to 1 hour if ommited
# valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
# deviceExportInterval: 1h

# full or relative path to the database, defaults to `database/mikromanager.db` if ommited
dbPath: database/mikromanager.db

# DB log level, sets log level for the gorm - https://gorm.io/docs/logger.html
# defaults to `silent` if ommited
dbLogLevel: silent

# DEPRECATED - latest version uses S3 for storing the backups
# full or relative path to the backups
# the path will be created
backupPath: backups

# MikroManager export workers, can be ommited or set to 0 if backups are not created
exportWorkers: 10

# S3 bucket for storing the backups
s3Bucket: mikromanager-backups

# S3 bucket path if you want to store the backups in a specific path
s3BucketPath: devel

# S3 endpoint useful for non-AWS S3 providers
# s3Endpoint: https://s3.amazonaws.com

# S3 region
s3Region: us-east-1

# S3 storage class
s3StorageClass: STANDARD

# S3 credentials, can also be pulled from the environment variables or temporary credentials
# the order of precedence is as follows
# 1. environment variables
# 2. config file
# 3. temporary credentials
s3AccessKey: AKIAIOSFODNN7EXAMPLE
s3SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

# S3 retries for upload/download
s3OpsRetries: 5
